local socket = require "socket"
local proto = require "proto"
local sproto = require "sproto"

local host = sproto.new(proto.s2c):host "package"
local request = host:attach(sproto.new(proto.c2s))

local fd

local function send_package(fd, pack)
	local package = string.pack(">s2", pack)
	fd:send(package)
end

local function unpack_package(text)
	local size = #text
	if size < 2 then
		return nil, text
	end
	local s = text:byte(1) * 256 + text:byte(2)
	if size < s+2 then
		return nil, text
	end

	return text:sub(3,2+s), text:sub(3+s)
end

local function recv_package(last)
	local result
	result, last = unpack_package(last)
	if result then
		return result, last
	end
	local s, status, partial = fd:receive(4096)
	local r = s or partial
	if not r or (r == "")then
		return nil, last
	end
	return unpack_package(last .. r)
end

local session = 0

local function send_request(name, args)
	session = session + 1
	local str = request(name, args, session)
	send_package(fd, str)
	print("Request:", session)
end

local last = ""

local function print_request(name, args)
	print("REQUEST", name)
	if args then
		for k,v in pairs(args) do
			print(k,v)
		end
	end
end

local function print_response(session, args)
	print("RESPONSE", session)
	if args then
		for k,v in pairs(args) do
			print(k,v)
		end
	end
end

local function print_package(t, ...)
	if t == "REQUEST" then
		print_request(...)
	else
		assert(t == "RESPONSE")
		print_response(...)
	end
end

local function dispatch_package()
	if not fd then
		return
	end
	while true do
		local v
		v, last = recv_package(last)
		if not v then
			break
		end

		print_package(host:dispatch(v))
	end
end

function connectCallBack()
	local result, err = fd:connect("192.168.1.102", 8888)
	if err == "already connected" then
		NetState:GetComponent("Text").text = "已连接"
	elseif err == "timeout" then
		NetState:GetComponent("Text").text = "连接超时"
	elseif err == "Operation already in progress" then
		NetState:GetComponent("Text").text = "连接中"
	end
end

function start()
	print("lua start...")

	ButtonSend:GetComponent("Button").onClick:AddListener(function()
		send_request("foobar", { what = "BBBB" })
	end)

	ButtonDisconnect:GetComponent("Button").onClick:AddListener(function()
		fd:close()
		NetState:GetComponent("Text").text = "连接断开"
	end)

	ButtonConnect:GetComponent("Button").onClick:AddListener(function()
		fd = socket.tcp()
		fd:settimeout(0)
		fd:connect("192.168.1.102", 8888)
		-- self:Invoke("connectCallBack", 1)
	end)

	ButtonRecv:GetComponent("Button").onClick:AddListener(function()
		print("44444444444444444444444444444444444444",fd:send("*l"))
	end)

	ButtonTest:GetComponent("Button").onClick:AddListener(function()
		print("55555555555555555555555555555555555555")
	end)
end

function update()
	dispatch_package()
end

function ondestroy()
    print("lua destroy")
    fd:close()
end
